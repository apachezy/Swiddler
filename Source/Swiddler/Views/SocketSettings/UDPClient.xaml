<UserControl x:Class="Swiddler.Views.SocketSettings.UDPClient"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:Controls="clr-namespace:Swiddler.Controls"
             xmlns:Converters="clr-namespace:Swiddler.Converters"
             xmlns:e="clr-namespace:Swiddler.MarkupExtensions"
             xmlns:c="clr-namespace:Swiddler.Converters"
             xmlns:b="clr-namespace:Swiddler.Behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Swiddler.ViewModels"
             xmlns:sock="clr-namespace:Swiddler.SocketSettings"
             mc:Ignorable="d"
             d:DataContext="{x:Static sock:UDPClientSettings.DesignInstance}" >

    <StackPanel Margin="4 0 4 4">
        <StackPanel.Resources>
            <Style TargetType="Label">
                <Setter Property="Padding" Value="2 4" />
                <Setter Property="Margin" Value="4 0" />
            </Style>
        </StackPanel.Resources>

        <Grid Margin="0 4" HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                <Label Target="{Binding ElementName=cmbTargetHost}" HorizontalAlignment="Left">
                    <Label.Style>
                        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="Content" Value="Target _host"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBroadcast}" Value="True">
                                    <Setter Property="Content" Value="Broadcast address"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMulticast}" Value="True">
                                    <Setter Property="Content" Value="Multicast address"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <ContentControl>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl" BasedOn="{StaticResource HelpControlStyle}">
                            <Setter Property="ToolTip" Value="Enter an IPv4/IPv6 address or host name.&#x0a;IPv6 requires to bind source address to IPv6 address as well."/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBroadcast}" Value="True">
                                    <Setter Property="ToolTip" Value="Should be always IPv4 address 255.255.255.255 for broadcast.&#x0a;Bind source address below to specify network interface which will be used to send packets."/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMulticast}" Value="True">
                                    <Setter Property="ToolTip" Value="Enter an multicast group address in the block 224.0.0.0/4 and ff0::/8 for IPv6.&#x0a;Bind source address below to specify network interface which will be used to join multicast group."/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </StackPanel>
            <Controls:ComboBoxEx IsEditable="True" x:Name="cmbTargetHost" Text="{Binding TargetHost, UpdateSourceTrigger=PropertyChanged}"
                                 IsSynchronizedWithCurrentItem="False"
                                 Margin="4 0" Width="260" Height="22" Grid.Row="1">
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="ItemsSource" Value="{x:Static vm:ConnectionSettings.KnownHosts}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBroadcast}" Value="True">
                                <Setter Property="ItemsSource" Value="{x:Static vm:ConnectionSettings.BroadcastHost}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMulticast}" Value="True">
                                <Setter Property="ItemsSource" Value="{x:Static vm:ConnectionSettings.KnownMulticastHosts}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>

            </Controls:ComboBoxEx>

            <Label Target="{Binding ElementName=txtTargetPort}" Grid.Column="1">_Port</Label>
            <TextBox Name="txtTargetPort" Height="22" VerticalContentAlignment="Center" b:TextBox.SelectAllText="True" Text="{Binding TargetPort, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}" 
                    Margin="4 0" Width="50" Grid.Row="1" Grid.Column="1" b:TextBox.NumericRange="1 65535"/>

        </Grid>

        <Grid Margin="0 4 0 0" HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                <CheckBox Margin="4" IsChecked="{Binding LocalBinding}" HorizontalAlignment="Left">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="Content" Value="Bind source address"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBroadcast}" Value="True">
                                    <Setter Property="Content" Value="Bind source IPv4 address"/>
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </CheckBox.Style>
                    
                </CheckBox>
                <ContentControl Style="{StaticResource HelpControlStyle}" ToolTip="Pakets are sent from this local IP address and port." />
            </StackPanel>
            <Controls:ComboBoxEx IsEditable="True" IsSynchronizedWithCurrentItem="False"
                        Margin="4 0" Width="260" Height="22" Grid.Row="1"
                        Text="{Binding LocalAddress, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding LocalBinding, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ComboBox.GroupStyle>
                    <GroupStyle HeaderTemplate="{StaticResource IPAdapterHeaderTemplate}" />
                </ComboBox.GroupStyle>
                <ComboBox.Style>
                    <Style BasedOn="{StaticResource IPAdapterComboBox}" TargetType="ComboBox">
                        <Setter Property="ItemsSource">
                            <Setter.Value>
                                <MultiBinding Converter="{Converters:LazyBindingConverter}">
                                    <!-- Condition -->
                                    <Binding Path="LocalBinding" />
                                    <!-- Lazy<object> -->
                                    <Binding Source="{x:Static e:GroupedIPAddresses.LazyValue}" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBroadcast}" Value="True">
                                <Setter Property="ItemsSource">
                                    <Setter.Value>
                                        <MultiBinding Converter="{Converters:LazyBindingConverter}">
                                            <!-- Condition -->
                                            <Binding Path="LocalBinding" />
                                            <!-- Lazy<object> -->
                                            <Binding Source="{x:Static e:GroupedIPAddresses.LazyValue_v4}" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </Controls:ComboBoxEx>

            <Label Target="{Binding ElementName=txtLocalPort}"
                Visibility="{Binding LocalBinding, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1">_Port</Label>
            <TextBox Name="txtLocalPort" VerticalContentAlignment="Center" b:TextBox.SelectAllText="True" HorizontalAlignment="Left"
                    Text="{Binding LocalPort, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" Margin="4 0" Width="50" Height="22" b:TextBox.NumericRange="0 65535"
                    Visibility="{Binding LocalBinding, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <StackPanel Orientation="Vertical" Grid.Row="2" Margin="0 4 0 0"
                        Visibility="{Binding LocalBinding, Converter={StaticResource BooleanToVisibilityConverter}}">
                
                <CheckBox Margin="4" HorizontalAlignment="Left" IsChecked="{Binding DualMode}" Content="IPv4/IPv6 dual-stack">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBroadcast}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMulticast}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <CheckBox Margin="4" HorizontalAlignment="Left" IsChecked="{Binding IsBroadcast}" Content="Broadcast">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMulticast}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DualMode}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <CheckBox Margin="4" HorizontalAlignment="Left" IsChecked="{Binding IsMulticast}" Content="Join multicast group">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBroadcast}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DualMode}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </StackPanel>

        </Grid>


    </StackPanel>

</UserControl>
