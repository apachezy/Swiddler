<Window x:Class="Swiddler.Views.NewCertificate"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Converters="clr-namespace:Swiddler.Converters"
        xmlns:vm="clr-namespace:Swiddler.ViewModels"
        xmlns:local="clr-namespace:Swiddler.Views"
        xmlns:b="clr-namespace:Swiddler.Behaviors"
        xmlns:e="clr-namespace:Swiddler.MarkupExtensions"
        
        mc:Ignorable="d"

        Title="Create and sign new certificate"
        WindowStyle="SingleBorderWindow"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        ShowInTaskbar="False"
        SizeToContent="WidthAndHeight"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        
        d:DataContext="{d:DesignInstance vm:Certificate, IsDesignTimeCreatable=True}" >

    <StackPanel UseLayoutRounding="True" SnapsToDevicePixels="True">
        <Border Margin="8 8 8 4">
            <Border.Effect>
                <DropShadowEffect BlurRadius="4" ShadowDepth="0" Opacity="0.33" />
            </Border.Effect>
            <Border Padding="16" Background="White">
                <StackPanel Orientation="Vertical" UseLayoutRounding="True" SnapsToDevicePixels="True">
                    <Grid UseLayoutRounding="True" SnapsToDevicePixels="True">
                        <Grid.Resources>
                            <Style TargetType="{x:Type Label}">
                                <Style.Triggers>
                                    <Trigger Property="Grid.Column" Value="0">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="Margin" Value="4 2"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <Trigger Property="Grid.Column" Value="1">
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="Height" Value="22"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <Trigger Property="Grid.Column" Value="1">
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Height" Value="22"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="320"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Target="{Binding ElementName=cmbCertType}" Visibility="{Binding SignByCertificateAuthority, Converter={StaticResource BooleanToVisibilityConverter}}">Certificate Type</Label>
                        <ComboBox Width="150" Grid.Row="0" Grid.Column="1" Name="cmbCertType" ItemsSource="{x:Static vm:Certificate.CertType}"
                                  Visibility="{Binding SignByCertificateAuthority, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  SelectedIndex="{Binding CertificateType, Converter={StaticResource IntEnumConverter}}"/>

                        <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0 4 4 0"
                                    VerticalAlignment="Top" Visibility="{Binding SignByCertificateAuthority, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Padding="2 4" Margin="0" Target="{Binding ElementName=cmbCA}" HorizontalAlignment="Left" Content="Certificate Authority" />
                            <Button Style="{StaticResource CertSettingsButton}" DataContext="{Binding CertificateAuthority}" Name="btnCAMenu"/>
                        </StackPanel>

                        <ComboBox Grid.Column="1" Grid.Row="1" x:Name="cmbCA" IsSynchronizedWithCurrentItem="False"
                          SelectedValue="{Binding CertificateAuthority, UpdateSourceTrigger=PropertyChanged, Converter={Converters:CertificateThumbprintConverter}, TargetNullValue={x:Static e:CertificateSource.EmptyItem}}" 
                          Visibility="{Binding SignByCertificateAuthority, Converter={StaticResource BooleanToVisibilityConverter}}"
                          HorizontalAlignment="Stretch" ItemTemplate="{StaticResource CertificateListItem}"
                          Margin="0 4" Height="40" ItemsSource="{e:CertificateSource FilterKeyCertSign=True, Lazy=False}"/>

                        <Label Grid.Row="2" Grid.Column="0" Target="{Binding ElementName=txtCommonName}">Common Name (CN)</Label>
                        <TextBox Grid.Row="2" Grid.Column="1" b:TextBox.SelectAllText="True" HorizontalAlignment="Stretch" Name="txtCommonName" Text="{Binding CommonName, UpdateSourceTrigger=PropertyChanged}" />

                        <!--<TextBlock Grid.Row="2" Grid.Column="1" Margin="0 0 0 8">           
                            <Hyperlink Click="SAN_Click">Subject Alternative Names...</Hyperlink>
                        </TextBlock>-->
                        <Label Grid.Row="3" Grid.Column="0" Target="{Binding ElementName=gridSAN}">Alternative Names (SAN)</Label>
                        <DataGrid x:Name="gridSAN" Height="75" Grid.Row="3" Grid.Column="1" Margin="0 4" ItemsSource="{Binding SANList}" Style="{StaticResource SimpleDataGrid}">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="80" Header="Type" CanUserSort="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="6 0 0 0" Text="{Binding Type}" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox SelectedValue="{Binding Type}" ItemsSource="{x:Static vm:Certificate.SANTypes}">
                                                <ComboBox.Style>
                                                    <Style TargetType="{x:Type ComboBox}">
                                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    </Style>
                                                </ComboBox.Style>
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Value" Width="*" Binding="{Binding Value}" CanUserSort="False">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Margin" Value="3 0" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Label Grid.Row="4" Grid.Column="0" Target="{Binding ElementName=cmbKeyLength}">Key length (bits)</Label>
                        <ComboBox Grid.Row="4" Grid.Column="1" Width="100" Name="cmbKeyLength" 
                            ItemsSource="{x:Static vm:Certificate.KeyLengths}" SelectedValue="{Binding KeyLength}"/>

                        <Label Grid.Row="5" Grid.Column="0" Target="{Binding ElementName=cmbDigestAlgorithm}">Digest Algorithm</Label>
                        <ComboBox Grid.Row="5" Grid.Column="1" Width="100" Name="cmbDigestAlgorithm" 
                            ItemsSource="{x:Static vm:Certificate.DigestAlgorithms}" SelectedValue="{Binding DigestAlgorithm}"/>

                        <Label Grid.Row="6" Grid.Column="0" Target="{Binding ElementName=txtLifetime}">Lifetime (days)</Label>
                        <TextBox Grid.Row="6" Grid.Column="1" Width="100" b:TextBox.SelectAllText="True" Name="txtLifetime" Text="{Binding Lifetime, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}" b:TextBox.NumericRange="1 9999"/>

                        <Label Margin="4 8 0 0" Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left">The following certificate components are optional:</Label>

                        <Label Grid.Row="8" Grid.Column="0" Target="{Binding ElementName=txtOrganization}">Organization (O)</Label>
                        <TextBox Grid.Row="8" Grid.Column="1" HorizontalAlignment="Stretch" b:TextBox.SelectAllText="True" Name="txtOrganization" Text="{Binding Organization, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="9" Grid.Column="0" Target="{Binding ElementName=txtOrganizationUnit}">Organizational Unit (OU)</Label>
                        <TextBox Grid.Row="9" Grid.Column="1" HorizontalAlignment="Stretch" b:TextBox.SelectAllText="True" Name="txtOrganizationUnit" Text="{Binding OrganizationUnit, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="10" Grid.Column="0" Target="{Binding ElementName=txtLocality}">Locality or City (L)</Label>
                        <TextBox Grid.Row="10" Grid.Column="1" HorizontalAlignment="Stretch" b:TextBox.SelectAllText="True" Name="txtLocality" Text="{Binding Locality, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="11" Grid.Column="0" Target="{Binding ElementName=txtState}">State or Province (S)</Label>
                        <TextBox Grid.Row="11" Grid.Column="1" HorizontalAlignment="Stretch" b:TextBox.SelectAllText="True" Name="txtState" Text="{Binding State, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="12" Grid.Column="0" Target="{Binding ElementName=cmbCountry}">Country Code (C)</Label>
                        <ComboBox IsEditable="True" VerticalContentAlignment="Center" Grid.Row="12" Grid.Column="1" Width="100" Name="cmbCountry" 
                            ItemsSource="{x:Static vm:Certificate.CountryCodes}" Text="{Binding Country, UpdateSourceTrigger=PropertyChanged}"/>

                    </Grid>

                </StackPanel>
            </Border>
        </Border>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="12">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="16 0 0 0" />
                    <Setter Property="Padding" Value="20 5" />
                    <Setter Property="MinWidth" Value="80" />
                </Style>
            </StackPanel.Resources>
            <Button IsCancel="True" Click="Cancel_Click">Cancel</Button>
            <Button IsDefault="True" Click="Create_Click">Create</Button>
        </StackPanel>
    </StackPanel>
    
</Window>
